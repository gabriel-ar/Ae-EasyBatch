{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Easy Batch","text":"<p>The After Effects template automator.</p> <p>Batch render a template in After Effects, given data in form of a table.</p>"},{"location":"#simple-use-case","title":"Simple Use Case","text":"<p>You have a lower third template, with two customizable fields, Top Text and Bottom Text. With our extension, you could load a <code>.csv</code> table file with columns named 'Top Text' and 'Bottom Text', containing hundreds of rows. The extension allows you to create a render per row. For the file names of the renders, you can decide on a pattern. The extension could use the text in <code>Top Text</code> or <code>Bottom Tex</code> to name the file, or  you can create a custom increment.</p> <p>See Getting Started for a first usage tutorial.</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#install-the-extension","title":"Install The Extension","text":"<ol> <li>You can use ZXPInstaller to install the extension package. Download ZXPInstaller here.</li> <li>Download the EasyBatch release package here.</li> <li>Open ZXPInstaller</li> <li>Drag and drop the <code>EasyBatch.zxp</code> inside ZXPInstaller.</li> <li>If open, restart After Effects.</li> </ol>"},{"location":"getting-started/#your-first-template","title":"Your First Template","text":""},{"location":"getting-started/#a-setup-the-motion-graphics-template","title":"A. Setup the Motion Graphics Template","text":"<ol> <li>Open your Motion Graphics Panel: <code>Window</code> &gt; <code>Essential Graphics Panel</code></li> <li>Select the composition that you want to make a template</li> <li>Assign a name to the template, this is the same name that the extension will use to pull the Template. Important: Don't have two templates with the same name, the extension uses the name to differentiate them.</li> <li>Drag the properties that you would like to make editable from the composition to the Motion Graphics panel. Important: Make sure to assign a relevant and unique name. The extension will not properly recognize a template with repeated property names.</li> </ol>"},{"location":"getting-started/#b-setup-the-extension","title":"B. Setup the Extension","text":"<ol> <li>Open the extension in <code>Window</code> &gt; <code>Extensions</code> &gt; <code>EasyBatch</code></li> <li>In the dropdown in the top bar, select your template. If you don't see it, use the reload button at the left of the top bar. If you still don't see the template, make sure it has at least one property.</li> </ol> <ol> <li> <p>In the <code>Data</code> tab you will be able to see a table with at least one column matching a property from your template. </p> <p>To add more columns use the <code>Add Columns</code> button at the bottom of the extension (in green). Add columns for as many properties you wish. In order to change what property is displayed on that column, use the dropdown menu on the header of the column (in yellow). The choice of columns and order doesn't affect the data that's applied to the template.</p> <p></p> </li> <li> <p>To preview the template with the data, use the eye button on each row (blue).</p> </li> <li> <p>Start adding data to the table. Each row will become a separate render. The following property types can be edited in the extension:</p> <ul> <li>Numbers: You can drag the axis (Eg. x) left and right and will increment or decrement the number.</li> <li>Colors: Click on the color box to open the color picker or copy the hex code in the text box below.</li> <li>Text: Just click the textbox and edit.</li> <li>Images/Videos/Replaceables: You can either select these one by one, or you can give the extension a pattern to find these files.</li> </ul> </li> </ol>"},{"location":"getting-started/#c-export","title":"C. Export","text":"<ol> <li>Go to the <code>Output</code> tab on the top bar.</li> </ol> <ol> <li>Select the mode (in green). You can either create renders, or you can generate compositions with the updated values. The <code>Generate</code> feature could be useful if the project will edited by others without access to the extension.</li> <li>The <code>File Path/Name Pattern</code> (in red) defines the pattern that the extension will use to name the exported files. This pattern can also create folders.<ul> <li>Click on <code>Select Base Path</code>, for now, this will be the folder that holds all our renders.</li> <li>In the dropdown to the left of the <code>Add Field</code> button, select <code>Base Path</code>. Now click on <code>Add Field</code>. This will add {base_path} to the pattern.</li> <li>Check the <code>Preview</code> section below, the <code>{base_path}</code> field on the pattern has been replaced by the path you selected.</li> <li>Other fields available are <code>Increment</code>, <code>Template name</code>, <code>Index</code> and every property from your template. Meaning that you can use the date of every row to name the render file.</li> <li>To get started you could use something like <code>{base_path}/mytemplate_{index}.mov</code></li> </ul> </li> <li>In order to set the render settings you need to use a template. Choose a template for the render settings and output module (in blue).</li> <li>Whenever you're ready hit <code>Render</code></li> </ol>"},{"location":"known-issues/","title":"Known Issues","text":""},{"location":"known-issues/#data-tab","title":"Data Tab","text":""},{"location":"known-issues/#copy-data-from-preview","title":"Copy Data from Preview","text":"<p>Given a bug or restriction in After Effects CEP, when reading the values of Essential Properties for text properties, it returns the default of the template and not the current value applied to to that property.</p>"},{"location":"known-issues/#color-picker","title":"Color picker","text":"<p>In both Windows and Mac, the color picker available to CEP is the OS default. In Mac this will bring inconsistencies when sampling colors, for some reason the color will have variations from the ones in screen. Possibly because of the default color profile.</p> <p>In Windows the color picker doesn't even provide a sampler.</p> <p>Possible Workaround: Use the copy data from preview feature.</p>"},{"location":"known-issues/#export-tab","title":"Export Tab","text":""},{"location":"known-issues/#exporting-png-frames","title":"Exporting PNG Frames","text":"<p>Even if you're exporting a single frame of a PNG sequence, After Effects will attach a number sequence to the end of the filename. <code>FinalRender.png</code> will be exported as <code>FinalRender.png00000</code></p> <p>A possible development workaround is to use the <code>Save Frame As</code> command from the <code>Composition</code> menu.</p>"},{"location":"known-issues/#start-batch-render-on-windows","title":"Start Batch Render on Windows","text":"<p>When clicking on the<code>Start Batch Render</code> button on Windows, it will queue up all the compositions and then block the UI, not displaying the progress. Once it finishes rendering the queue, it will unblock the UI and display all the finished jobs.</p>"},{"location":"tab-data/","title":"Data Tab","text":"<p>The columns of the data tab will display the properties that you added to the template. Then, each row corresponds to a single render that will be generated by the extension.</p>"},{"location":"tab-data/#working-with-rows-and-columns","title":"Working With Rows and Columns","text":"<p>Notice that all your template properties are not visible the first time you open a template in the extension. To add columns use the <code>AddColumn</code> button (green). In order to change the properties assigned to each column, click on the header of each column (in yellow) and using the dropdown, select the property you want to see. The visibility of the columns doesn't affect the data is actually applied to the templates.</p> <p>To hide a column from the view click on the trash icon at the header of each column.</p> <p></p>"},{"location":"tab-data/#row-icons-blue","title":"Row Icons (blue)","text":"<ul> <li>Trash Can: Deletes the row.</li> <li>Eye: Previews the current row. It works by putting the template composition and changing the Essential Properties with the values of the row.</li> <li>Target: Copies the current values of the layer inside the <code>TemplatePreview</code> composition to the current row. Useful if you want to use the color picker of AfterEffects instead of the extension's. It will not copy the text values. See known issues.</li> <li>Camera: Render this row only. You still need to setup the Output, otherwise the render won't work.</li> </ul>"},{"location":"tab-data/#importing-csv-data","title":"Importing CSV data.","text":"<p>Coma Separated Values is a file format that allows to save data in the form of a table, similar to a spreadsheet. To import a CSV file into the extension, you need to make sure the name of each column matches with the names of the properties in your template. If the columns of the imported file don't match, the extension will ignore this data. Also the values need to be formatted correctly, depending on the type:</p> <ul> <li>Text: The text can be just written in the cells, but beware that line breaks (multiline text) may expose unexpected behavior in the extension.</li> <li>Color: The colors need to be formatted in an RGBA array of 4 numbers, between 0 and 1. Eg. pure red is: <code>1,0,0,1</code> white is: <code>1,1,1,1</code> and gray is <code>0.5,0.5,0.5,1</code></li> <li>Position: The position of 2d and 3d layers are represented with an array of 3 numbers. Eg layer in the middle of a full HD frame: <code>960,540,0</code></li> <li>Scale: The scale is represented with an array of 3 numbers, in percentages. Eg a layer scaled to default value: <code>100,100,100</code></li> <li>Values: any other single dimensional value can be just written in the cell</li> <li>Images or Videos: As of now, the extension doesn't allow to input the file paths for Replaceables, to work with these, check the replaceables section below.</li> </ul>"},{"location":"tab-data/#replacing-images-or-footage-in-templates","title":"Replacing Images or Footage in Templates","text":"<p>We call this properties replaceables. As of now in order to work with these, you need to define the path with a pattern.</p> <p></p> <p>The replaceable properties will have a cob icon on their columns (in green). Click on it to configure the pattern used to import the files from storage.</p> <p></p>"},{"location":"tab-data/#preview","title":"Preview","text":"<p>The preview will be showing you the resulting path where the extension is going to search for the file. The preview will always use the first row as a sample.</p>"},{"location":"tab-data/#field-base-path","title":"Field: Base Path","text":"<p>Most of the times the patterns will include a base path, this is the folder the assets you want to import have in common.  To select a base path, click on the <code>Pick Base Path</code> button. The add it to the pattern: Click on the dropdown at the left of <code>Add Field</code>, and select <code>Base Path</code>, then click on <code>Add Field</code>. This is the same as if you typed <code>{base_path}</code> inside the pattern.</p>"},{"location":"tab-data/#field-row-number","title":"Field: Row Number","text":"<p>It will replace <code>{row_number}</code> with the current row index. If you have 20 renders, the first one will be <code>0</code> and the last one <code>19</code>.</p>"},{"location":"tab-data/#field-increment","title":"Field: Increment","text":"<p>It will generate an increment. <code>{increment:0000}</code> will  be replaced with <code>0000</code> for the first row, and with <code>0001</code> for the following row. The increment keeps the leading 0s, and you can determine how many of them to place. Also, you can determine the starting number: <code>{increment:050}</code> will be replaced with <code>050</code> and the next render will be replaced with <code>051</code>.</p>"},{"location":"tab-data/#field-custom","title":"Field: Custom","text":"<p>You can also add the values of any template property as part of the pattern. In the case of the screenshot above <code>{Tricode Home}</code> will be replaced with <code>PAL</code> as this is the value of the column Tricode Home for the first row. For every consecutive row (and therefore render), this will be updated to match the value of Tricode Home for that row.</p>"},{"location":"tab-output/","title":"Output Tab","text":"<p>In this page you'll find all the configurations to render the  template.</p> <p></p>"},{"location":"tab-output/#mode","title":"Mode","text":"<p>The output can work in two modes:</p> <ul> <li>Render: This mode will output files to your drive.</li> <li>Generate Comps: This mode will generate one composition for each row, with the properties replaced with your data. This could be useful is a user had to modify the resulting compositions with no access to EasyBatch.</li> </ul>"},{"location":"tab-output/#file-name-pattern","title":"File Name Pattern","text":"<p>This feature allows you to give dynamic names and paths to your renders. This pattern will be interpreted for each render you do to generate the final path for that file.</p> <p>In the screenshot above, the pattern <code>{base_path}/INT_Matchup_{Tricode Home}vs{Tricode Away}</code> will be replaced as <code>Renders/INT_Matchup_PALvsPOR</code>, where the file named <code>INT_Matchup_PALvsPOR</code> will be placed inside the folder <code>Renders</code>.</p> <p>If you include <code>/</code> in the pattern, this will interpreted as a subfolder, the pattern is capable of dynamically creating these subfolders.</p> <p>The pattern is made up of fields, in the case above <code>{base_path}</code>, <code>{Tricode Home}</code> and <code>{Tricode Away}</code> are fields.</p> <p></p>"},{"location":"tab-output/#field-base-path","title":"Field: Base Path","text":"<p>Most of the times the patterns will include a base path, this is the folder that all the renders have in common. If you select a folder in the same drive, you'll see that the path will be relative (doesn't include the drive letter), and this will greatly help to keep the project portable. The path is relative to the project.</p> <p>To select a base path, click on the <code>Pick Base Path</code> button. The add it to the pattern: Click on the dropdown at the left of <code>Add Field</code>, and select <code>Base Path</code>, then click on <code>Add Field</code>. This is the same as if you typed <code>{base_path}</code> inside the pattern.</p> <p>In the screenshot above, we selected the folder <code>Render</code>, which is located inside the same folder where the project is saved. Since our path is relative to the location of the project, it is saved as <code>Render/</code>.</p>"},{"location":"tab-output/#field-template-name","title":"Field: Template Name","text":"<p>It will replace <code>{template_name}</code> with the name of the template (surprise!!!), in this case will result in <code>Team Matchup Interstitial</code>.</p>"},{"location":"tab-output/#field-row-number","title":"Field: Row Number","text":"<p>It will replace <code>{row_number}</code> with the current row index. If you have 20 renders, the first one will be <code>0</code> and the last one <code>19</code>.</p>"},{"location":"tab-output/#field-increment","title":"Field: Increment","text":"<p>It will generate an increment. <code>{increment:0000}</code> will  be replaced with <code>0000</code> for the first row, and with <code>0001</code> for the following row. The increment keeps as many leading 0s as you determine. Also, you can set the starting number: <code>{increment:050}</code> will be replaced with <code>050</code> and in the next render will become <code>051</code>.</p>"},{"location":"tab-output/#field-custom","title":"Field: Custom","text":"<p>You can also add the values of any template property as part of the pattern. In the case of the screenshot above <code>{Tricode Home}</code> will be replaced with <code>PAL</code> as this is the value of the column Tricode Home for the first row. For every consecutive row (and therefore render), this will be updated to match the value of Tricode Home for that row.</p> <p>Backslashes in Windows</p> <p>Beware, in both Windows and Mac, you should be using forward slashes to separate directories.</p>"},{"location":"tab-output/#render-settings","title":"Render Settings","text":"<p>In order to define the render configuration for all the files generated using this template, you need to select a preset for both Render Settings and the Output Module.</p> <ul> <li>Render Settings: Same as selecting a render settings template in the render queue. It affects the Quality, Resolution, Proxy, etc.</li> <li>Output Module: Same as selecting an output module in the render queue. It affects the codec, compression, audio, etc.</li> </ul> <p>To make a template, add any composition to the render queue, click on the down facing arrow to the left of <code>Output Module</code> and click on <code>Make Template...</code></p> <p></p>"}]}